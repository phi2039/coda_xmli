//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.03 at 01:43:25 AM EST 
//


package com.coda.efinance.schemas.elementmaster;

import java.io.Serializable;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * This is an element key that incorporates temporary supplier identifiers.
 * 
 * <p>Java class for elmFullKeyWithTemporaryElmFilter complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="elmFullKeyWithTemporaryElmFilter"&gt;
 *   &lt;complexContent&gt;
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="FullKey" type="{http://www.coda.com/efinance/schemas/elementmaster}elmFullKey"/&gt;
 *         &lt;element name="UsingFilter" type="{http://www.w3.org/2001/XMLSchema}boolean"/&gt;
 *         &lt;element name="TemporaryElmFilter" type="{http://www.coda.com/efinance/schemas/elementmaster}elmTemporaryElmFilter" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/restriction&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "elmFullKeyWithTemporaryElmFilter", propOrder = {
    "fullKey",
    "usingFilter",
    "temporaryElmFilter"
})
public class ElmFullKeyWithTemporaryElmFilter
    implements Serializable
{

    @XmlElement(name = "FullKey", required = true)
    protected ElmFullKey fullKey;
    @XmlElement(name = "UsingFilter")
    protected boolean usingFilter;
    @XmlElement(name = "TemporaryElmFilter")
    protected ElmTemporaryElmFilter temporaryElmFilter;

    /**
     * Gets the value of the fullKey property.
     * 
     * @return
     *     possible object is
     *     {@link ElmFullKey }
     *     
     */
    public ElmFullKey getFullKey() {
        return fullKey;
    }

    /**
     * Sets the value of the fullKey property.
     * 
     * @param value
     *     allowed object is
     *     {@link ElmFullKey }
     *     
     */
    public void setFullKey(ElmFullKey value) {
        this.fullKey = value;
    }

    /**
     * Gets the value of the usingFilter property.
     * 
     */
    public boolean isUsingFilter() {
        return usingFilter;
    }

    /**
     * Sets the value of the usingFilter property.
     * 
     */
    public void setUsingFilter(boolean value) {
        this.usingFilter = value;
    }

    /**
     * Gets the value of the temporaryElmFilter property.
     * 
     * @return
     *     possible object is
     *     {@link ElmTemporaryElmFilter }
     *     
     */
    public ElmTemporaryElmFilter getTemporaryElmFilter() {
        return temporaryElmFilter;
    }

    /**
     * Sets the value of the temporaryElmFilter property.
     * 
     * @param value
     *     allowed object is
     *     {@link ElmTemporaryElmFilter }
     *     
     */
    public void setTemporaryElmFilter(ElmTemporaryElmFilter value) {
        this.temporaryElmFilter = value;
    }

}
