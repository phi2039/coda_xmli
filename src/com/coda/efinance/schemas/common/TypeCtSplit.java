//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.03 at 01:45:22 AM EST 
//


package com.coda.efinance.schemas.common;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeCtSplit.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="typeCtSplit"&gt;
 *   &lt;restriction base="{http://www.coda.com/efinance/schemas/common}typeBaseEnum"&gt;
 *     &lt;enumeration value="split_el1"/&gt;
 *     &lt;enumeration value="split_el2"/&gt;
 *     &lt;enumeration value="split_el3"/&gt;
 *     &lt;enumeration value="split_el4"/&gt;
 *     &lt;enumeration value="split_el5"/&gt;
 *     &lt;enumeration value="split_el6"/&gt;
 *     &lt;enumeration value="split_el7"/&gt;
 *     &lt;enumeration value="split_el8"/&gt;
 *     &lt;enumeration value="none"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "typeCtSplit")
@XmlEnum
public enum TypeCtSplit {

    @XmlEnumValue("split_el1")
    SPLIT_EL_1("split_el1"),
    @XmlEnumValue("split_el2")
    SPLIT_EL_2("split_el2"),
    @XmlEnumValue("split_el3")
    SPLIT_EL_3("split_el3"),
    @XmlEnumValue("split_el4")
    SPLIT_EL_4("split_el4"),
    @XmlEnumValue("split_el5")
    SPLIT_EL_5("split_el5"),
    @XmlEnumValue("split_el6")
    SPLIT_EL_6("split_el6"),
    @XmlEnumValue("split_el7")
    SPLIT_EL_7("split_el7"),
    @XmlEnumValue("split_el8")
    SPLIT_EL_8("split_el8"),
    @XmlEnumValue("none")
    NONE("none");
    private final String value;

    TypeCtSplit(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TypeCtSplit fromValue(String v) {
        for (TypeCtSplit c: TypeCtSplit.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
