//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.03 at 01:45:22 AM EST 
//


package com.coda.efinance.schemas.common;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeCtGslDataclass.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="typeCtGslDataclass"&gt;
 *   &lt;restriction base="{http://www.coda.com/efinance/schemas/common}typeBaseEnum"&gt;
 *     &lt;enumeration value="dataclass_all"/&gt;
 *     &lt;enumeration value="dataclass_details"/&gt;
 *     &lt;enumeration value="dataclass_balance"/&gt;
 *     &lt;enumeration value="dataclass_document"/&gt;
 *     &lt;enumeration value="dataclass_diary"/&gt;
 *     &lt;enumeration value="dataclass_trace"/&gt;
 *     &lt;enumeration value="dataclass_commitments"/&gt;
 *     &lt;enumeration value="dataclass_brsledger"/&gt;
 *     &lt;enumeration value="dataclass_statement"/&gt;
 *     &lt;enumeration value="dataclass_details_or_document"/&gt;
 *     &lt;enumeration value="dataclass_assets"/&gt;
 *     &lt;enumeration value="dataclass_details_or_commitments"/&gt;
 *     &lt;enumeration value="dataclass_details_or_balances"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "typeCtGslDataclass")
@XmlEnum
public enum TypeCtGslDataclass {

    @XmlEnumValue("dataclass_all")
    DATACLASS_ALL("dataclass_all"),
    @XmlEnumValue("dataclass_details")
    DATACLASS_DETAILS("dataclass_details"),
    @XmlEnumValue("dataclass_balance")
    DATACLASS_BALANCE("dataclass_balance"),
    @XmlEnumValue("dataclass_document")
    DATACLASS_DOCUMENT("dataclass_document"),
    @XmlEnumValue("dataclass_diary")
    DATACLASS_DIARY("dataclass_diary"),
    @XmlEnumValue("dataclass_trace")
    DATACLASS_TRACE("dataclass_trace"),
    @XmlEnumValue("dataclass_commitments")
    DATACLASS_COMMITMENTS("dataclass_commitments"),
    @XmlEnumValue("dataclass_brsledger")
    DATACLASS_BRSLEDGER("dataclass_brsledger"),
    @XmlEnumValue("dataclass_statement")
    DATACLASS_STATEMENT("dataclass_statement"),
    @XmlEnumValue("dataclass_details_or_document")
    DATACLASS_DETAILS_OR_DOCUMENT("dataclass_details_or_document"),
    @XmlEnumValue("dataclass_assets")
    DATACLASS_ASSETS("dataclass_assets"),
    @XmlEnumValue("dataclass_details_or_commitments")
    DATACLASS_DETAILS_OR_COMMITMENTS("dataclass_details_or_commitments"),
    @XmlEnumValue("dataclass_details_or_balances")
    DATACLASS_DETAILS_OR_BALANCES("dataclass_details_or_balances");
    private final String value;

    TypeCtGslDataclass(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TypeCtGslDataclass fromValue(String v) {
        for (TypeCtGslDataclass c: TypeCtGslDataclass.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
