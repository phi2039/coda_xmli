//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.03 at 01:45:22 AM EST 
//


package com.coda.efinance.schemas.common;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeSummary.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="typeSummary"&gt;
 *   &lt;restriction base="{http://www.coda.com/efinance/schemas/common}typeBaseEnum"&gt;
 *     &lt;enumeration value="summ_el1"/&gt;
 *     &lt;enumeration value="summ_el2"/&gt;
 *     &lt;enumeration value="summ_el3"/&gt;
 *     &lt;enumeration value="summ_el4"/&gt;
 *     &lt;enumeration value="summ_el5"/&gt;
 *     &lt;enumeration value="summ_el6"/&gt;
 *     &lt;enumeration value="summ_el7"/&gt;
 *     &lt;enumeration value="summ_el8"/&gt;
 *     &lt;enumeration value="acct_level"/&gt;
 *     &lt;enumeration value="none"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "typeSummary")
@XmlEnum
public enum TypeSummary {

    @XmlEnumValue("summ_el1")
    SUMM_EL_1("summ_el1"),
    @XmlEnumValue("summ_el2")
    SUMM_EL_2("summ_el2"),
    @XmlEnumValue("summ_el3")
    SUMM_EL_3("summ_el3"),
    @XmlEnumValue("summ_el4")
    SUMM_EL_4("summ_el4"),
    @XmlEnumValue("summ_el5")
    SUMM_EL_5("summ_el5"),
    @XmlEnumValue("summ_el6")
    SUMM_EL_6("summ_el6"),
    @XmlEnumValue("summ_el7")
    SUMM_EL_7("summ_el7"),
    @XmlEnumValue("summ_el8")
    SUMM_EL_8("summ_el8"),
    @XmlEnumValue("acct_level")
    ACCT_LEVEL("acct_level"),
    @XmlEnumValue("none")
    NONE("none");
    private final String value;

    TypeSummary(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TypeSummary fromValue(String v) {
        for (TypeSummary c: TypeSummary.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
