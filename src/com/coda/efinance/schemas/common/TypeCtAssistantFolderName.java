//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.03 at 01:45:22 AM EST 
//


package com.coda.efinance.schemas.common;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeCtAssistantFolderName.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="typeCtAssistantFolderName"&gt;
 *   &lt;restriction base="{http://www.coda.com/efinance/schemas/common}typeBaseEnum"&gt;
 *     &lt;enumeration value="financials"/&gt;
 *     &lt;enumeration value="statement"/&gt;
 *     &lt;enumeration value="folder1"/&gt;
 *     &lt;enumeration value="folder2"/&gt;
 *     &lt;enumeration value="folderany"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "typeCtAssistantFolderName")
@XmlEnum
public enum TypeCtAssistantFolderName {


    /**
     * Folder contains financial data.
     * 
     */
    @XmlEnumValue("financials")
    FINANCIALS("financials"),

    /**
     * Folder contains statement data.
     * 
     */
    @XmlEnumValue("statement")
    STATEMENT("statement"),

    /**
     * User-defined folder 1.
     * 
     */
    @XmlEnumValue("folder1")
    FOLDER_1("folder1"),

    /**
     * User-defined folder 2.
     * 
     */
    @XmlEnumValue("folder2")
    FOLDER_2("folder2"),

    /**
     * Any type of folder.
     * 
     */
    @XmlEnumValue("folderany")
    FOLDERANY("folderany");
    private final String value;

    TypeCtAssistantFolderName(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TypeCtAssistantFolderName fromValue(String v) {
        for (TypeCtAssistantFolderName c: TypeCtAssistantFolderName.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
