//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.03 at 01:45:22 AM EST 
//


package com.coda.efinance.schemas.common;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeCtAdsProgressStatus.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="typeCtAdsProgressStatus"&gt;
 *   &lt;restriction base="{http://www.coda.com/efinance/schemas/common}typeBaseEnum"&gt;
 *     &lt;enumeration value="aud_shr_init"/&gt;
 *     &lt;enumeration value="aud_shr_reading"/&gt;
 *     &lt;enumeration value="aud_bal_halted"/&gt;
 *     &lt;enumeration value="aud_shr_complete"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "typeCtAdsProgressStatus")
@XmlEnum
public enum TypeCtAdsProgressStatus {


    /**
     * Initialising
     * 
     */
    @XmlEnumValue("aud_shr_init")
    AUD_SHR_INIT("aud_shr_init"),

    /**
     * Reading
     * 
     */
    @XmlEnumValue("aud_shr_reading")
    AUD_SHR_READING("aud_shr_reading"),

    /**
     * Halted
     * 
     */
    @XmlEnumValue("aud_bal_halted")
    AUD_BAL_HALTED("aud_bal_halted"),

    /**
     * Complete
     * 
     */
    @XmlEnumValue("aud_shr_complete")
    AUD_SHR_COMPLETE("aud_shr_complete");
    private final String value;

    TypeCtAdsProgressStatus(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TypeCtAdsProgressStatus fromValue(String v) {
        for (TypeCtAdsProgressStatus c: TypeCtAdsProgressStatus.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
