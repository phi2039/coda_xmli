//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.03 at 01:45:22 AM EST 
//


package com.coda.efinance.schemas.common;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeCtCopMasterType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="typeCtCopMasterType"&gt;
 *   &lt;restriction base="{http://www.coda.com/efinance/schemas/common}typeBaseEnum"&gt;
 *     &lt;enumeration value="currency"/&gt;
 *     &lt;enumeration value="year_period"/&gt;
 *     &lt;enumeration value="elm_group"/&gt;
 *     &lt;enumeration value="balance"/&gt;
 *     &lt;enumeration value="ten99"/&gt;
 *     &lt;enumeration value="selector"/&gt;
 *     &lt;enumeration value="presenter"/&gt;
 *     &lt;enumeration value="media"/&gt;
 *     &lt;enumeration value="element"/&gt;
 *     &lt;enumeration value="tax"/&gt;
 *     &lt;enumeration value="element_template"/&gt;
 *     &lt;enumeration value="bank"/&gt;
 *     &lt;enumeration value="document"/&gt;
 *     &lt;enumeration value="receiver"/&gt;
 *     &lt;enumeration value="destination"/&gt;
 *     &lt;enumeration value="bankrec"/&gt;
 *     &lt;enumeration value="statement_type"/&gt;
 *     &lt;enumeration value="transaction_type"/&gt;
 *     &lt;enumeration value="statement_posting"/&gt;
 *     &lt;enumeration value="archive"/&gt;
 *     &lt;enumeration value="distribution"/&gt;
 *     &lt;enumeration value="rule"/&gt;
 *     &lt;enumeration value="pay"/&gt;
 *     &lt;enumeration value="ledger"/&gt;
 *     &lt;enumeration value="interest"/&gt;
 *     &lt;enumeration value="reminder"/&gt;
 *     &lt;enumeration value="tax_transfer"/&gt;
 *     &lt;enumeration value="chain"/&gt;
 *     &lt;enumeration value="input_template"/&gt;
 *     &lt;enumeration value="matching"/&gt;
 *     &lt;enumeration value="undo_matching"/&gt;
 *     &lt;enumeration value="browse_report"/&gt;
 *     &lt;enumeration value="element_filter_master"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "typeCtCopMasterType")
@XmlEnum
public enum TypeCtCopMasterType {


    /**
     * Currency master
     * 
     */
    @XmlEnumValue("currency")
    CURRENCY("currency"),

    /**
     * Year/Period master
     * 
     */
    @XmlEnumValue("year_period")
    YEAR_PERIOD("year_period"),

    /**
     * Element group master
     * 
     */
    @XmlEnumValue("elm_group")
    ELM_GROUP("elm_group"),

    /**
     * Balance master
     * 
     */
    @XmlEnumValue("balance")
    BALANCE("balance"),

    /**
     *  1099 master
     * 
     */
    @XmlEnumValue("ten99")
    TEN_99("ten99"),

    /**
     * Selector master
     * 
     */
    @XmlEnumValue("selector")
    SELECTOR("selector"),

    /**
     * Presenter master
     * 
     */
    @XmlEnumValue("presenter")
    PRESENTER("presenter"),

    /**
     * Media master
     * 
     */
    @XmlEnumValue("media")
    MEDIA("media"),

    /**
     * Element master
     * 
     */
    @XmlEnumValue("element")
    ELEMENT("element"),

    /**
     * Tax master
     * 
     */
    @XmlEnumValue("tax")
    TAX("tax"),

    /**
     * Element template master
     * 
     */
    @XmlEnumValue("element_template")
    ELEMENT_TEMPLATE("element_template"),

    /**
     * Bank master
     * 
     */
    @XmlEnumValue("bank")
    BANK("bank"),

    /**
     * Document master
     * 
     */
    @XmlEnumValue("document")
    DOCUMENT("document"),

    /**
     * InterCompany receiver master
     * 
     */
    @XmlEnumValue("receiver")
    RECEIVER("receiver"),

    /**
     * InterCompany destination master
     * 
     */
    @XmlEnumValue("destination")
    DESTINATION("destination"),

    /**
     * Bank reconciliation master
     * 
     */
    @XmlEnumValue("bankrec")
    BANKREC("bankrec"),

    /**
     * Statement type master
     * 
     */
    @XmlEnumValue("statement_type")
    STATEMENT_TYPE("statement_type"),

    /**
     * Transaction type master
     * 
     */
    @XmlEnumValue("transaction_type")
    TRANSACTION_TYPE("transaction_type"),

    /**
     * Statement posting master
     * 
     */
    @XmlEnumValue("statement_posting")
    STATEMENT_POSTING("statement_posting"),

    /**
     * Archive master
     * 
     */
    @XmlEnumValue("archive")
    ARCHIVE("archive"),

    /**
     * Distribution master
     * 
     */
    @XmlEnumValue("distribution")
    DISTRIBUTION("distribution"),

    /**
     * Rule master
     * 
     */
    @XmlEnumValue("rule")
    RULE("rule"),

    /**
     * Pay master
     * 
     */
    @XmlEnumValue("pay")
    PAY("pay"),

    /**
     * Ledger master
     * 
     */
    @XmlEnumValue("ledger")
    LEDGER("ledger"),

    /**
     * Interest master
     * 
     */
    @XmlEnumValue("interest")
    INTEREST("interest"),

    /**
     * Reminder letter master
     * 
     */
    @XmlEnumValue("reminder")
    REMINDER("reminder"),

    /**
     * Tax transfer master
     * 
     */
    @XmlEnumValue("tax_transfer")
    TAX_TRANSFER("tax_transfer"),

    /**
     * Chain master
     * 
     */
    @XmlEnumValue("chain")
    CHAIN("chain"),

    /**
     * Input template master
     * 
     */
    @XmlEnumValue("input_template")
    INPUT_TEMPLATE("input_template"),

    /**
     * matching master
     * 
     */
    @XmlEnumValue("matching")
    MATCHING("matching"),

    /**
     * Undo matching master
     * 
     */
    @XmlEnumValue("undo_matching")
    UNDO_MATCHING("undo_matching"),

    /**
     * Browse report master
     * 
     */
    @XmlEnumValue("browse_report")
    BROWSE_REPORT("browse_report"),

    /**
     * Element filter master
     * 
     */
    @XmlEnumValue("element_filter_master")
    ELEMENT_FILTER_MASTER("element_filter_master");
    private final String value;

    TypeCtCopMasterType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TypeCtCopMasterType fromValue(String v) {
        for (TypeCtCopMasterType c: TypeCtCopMasterType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
