//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.03 at 01:45:22 AM EST 
//


package com.coda.efinance.schemas.common;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeIntercmpCrossDbStatus.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="typeIntercmpCrossDbStatus"&gt;
 *   &lt;restriction base="{http://www.coda.com/efinance/schemas/common}typeBaseEnum"&gt;
 *     &lt;enumeration value="ic_xdb_none"/&gt;
 *     &lt;enumeration value="ic_xdb_to_export"/&gt;
 *     &lt;enumeration value="ic_xdb_exporting"/&gt;
 *     &lt;enumeration value="ic_xdb_exported"/&gt;
 *     &lt;enumeration value="ic_xdb_export_processed"/&gt;
 *     &lt;enumeration value="ic_xdb_to_synchronise"/&gt;
 *     &lt;enumeration value="ic_xdb_synchronising"/&gt;
 *     &lt;enumeration value="ic_xdb_synchronised"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "typeIntercmpCrossDbStatus")
@XmlEnum
public enum TypeIntercmpCrossDbStatus {

    @XmlEnumValue("ic_xdb_none")
    IC_XDB_NONE("ic_xdb_none"),
    @XmlEnumValue("ic_xdb_to_export")
    IC_XDB_TO_EXPORT("ic_xdb_to_export"),
    @XmlEnumValue("ic_xdb_exporting")
    IC_XDB_EXPORTING("ic_xdb_exporting"),
    @XmlEnumValue("ic_xdb_exported")
    IC_XDB_EXPORTED("ic_xdb_exported"),
    @XmlEnumValue("ic_xdb_export_processed")
    IC_XDB_EXPORT_PROCESSED("ic_xdb_export_processed"),
    @XmlEnumValue("ic_xdb_to_synchronise")
    IC_XDB_TO_SYNCHRONISE("ic_xdb_to_synchronise"),
    @XmlEnumValue("ic_xdb_synchronising")
    IC_XDB_SYNCHRONISING("ic_xdb_synchronising"),
    @XmlEnumValue("ic_xdb_synchronised")
    IC_XDB_SYNCHRONISED("ic_xdb_synchronised");
    private final String value;

    TypeIntercmpCrossDbStatus(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TypeIntercmpCrossDbStatus fromValue(String v) {
        for (TypeIntercmpCrossDbStatus c: TypeIntercmpCrossDbStatus.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
