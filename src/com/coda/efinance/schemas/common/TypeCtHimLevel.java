//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.03 at 01:45:22 AM EST 
//


package com.coda.efinance.schemas.common;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeCtHimLevel.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="typeCtHimLevel"&gt;
 *   &lt;restriction base="{http://www.coda.com/efinance/schemas/common}typeBaseEnum"&gt;
 *     &lt;enumeration value="him_hierarchy"/&gt;
 *     &lt;enumeration value="him_level1"/&gt;
 *     &lt;enumeration value="him_level2"/&gt;
 *     &lt;enumeration value="him_level3"/&gt;
 *     &lt;enumeration value="him_level4"/&gt;
 *     &lt;enumeration value="him_level5"/&gt;
 *     &lt;enumeration value="him_level6"/&gt;
 *     &lt;enumeration value="him_level7"/&gt;
 *     &lt;enumeration value="him_level8"/&gt;
 *     &lt;enumeration value="him_level9"/&gt;
 *     &lt;enumeration value="him_level10"/&gt;
 *     &lt;enumeration value="him_level11"/&gt;
 *     &lt;enumeration value="him_level12"/&gt;
 *     &lt;enumeration value="him_leaf"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "typeCtHimLevel")
@XmlEnum
public enum TypeCtHimLevel {

    @XmlEnumValue("him_hierarchy")
    HIM_HIERARCHY("him_hierarchy"),
    @XmlEnumValue("him_level1")
    HIM_LEVEL_1("him_level1"),
    @XmlEnumValue("him_level2")
    HIM_LEVEL_2("him_level2"),
    @XmlEnumValue("him_level3")
    HIM_LEVEL_3("him_level3"),
    @XmlEnumValue("him_level4")
    HIM_LEVEL_4("him_level4"),
    @XmlEnumValue("him_level5")
    HIM_LEVEL_5("him_level5"),
    @XmlEnumValue("him_level6")
    HIM_LEVEL_6("him_level6"),
    @XmlEnumValue("him_level7")
    HIM_LEVEL_7("him_level7"),
    @XmlEnumValue("him_level8")
    HIM_LEVEL_8("him_level8"),
    @XmlEnumValue("him_level9")
    HIM_LEVEL_9("him_level9"),
    @XmlEnumValue("him_level10")
    HIM_LEVEL_10("him_level10"),
    @XmlEnumValue("him_level11")
    HIM_LEVEL_11("him_level11"),
    @XmlEnumValue("him_level12")
    HIM_LEVEL_12("him_level12"),
    @XmlEnumValue("him_leaf")
    HIM_LEAF("him_leaf");
    private final String value;

    TypeCtHimLevel(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TypeCtHimLevel fromValue(String v) {
        for (TypeCtHimLevel c: TypeCtHimLevel.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
