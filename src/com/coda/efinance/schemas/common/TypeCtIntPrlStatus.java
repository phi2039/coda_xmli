//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.03 at 01:45:22 AM EST 
//


package com.coda.efinance.schemas.common;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeCtIntPrlStatus.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="typeCtIntPrlStatus"&gt;
 *   &lt;restriction base="{http://www.coda.com/efinance/schemas/common}typeBaseEnum"&gt;
 *     &lt;enumeration value="generating"/&gt;
 *     &lt;enumeration value="generated"/&gt;
 *     &lt;enumeration value="manipulating"/&gt;
 *     &lt;enumeration value="manipulated"/&gt;
 *     &lt;enumeration value="posting"/&gt;
 *     &lt;enumeration value="posted"/&gt;
 *     &lt;enumeration value="part_posted"/&gt;
 *     &lt;enumeration value="deleting"/&gt;
 *     &lt;enumeration value="void"/&gt;
 *     &lt;enumeration value="recovering"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "typeCtIntPrlStatus")
@XmlEnum
public enum TypeCtIntPrlStatus {

    @XmlEnumValue("generating")
    GENERATING("generating"),
    @XmlEnumValue("generated")
    GENERATED("generated"),
    @XmlEnumValue("manipulating")
    MANIPULATING("manipulating"),
    @XmlEnumValue("manipulated")
    MANIPULATED("manipulated"),
    @XmlEnumValue("posting")
    POSTING("posting"),
    @XmlEnumValue("posted")
    POSTED("posted"),
    @XmlEnumValue("part_posted")
    PART_POSTED("part_posted"),
    @XmlEnumValue("deleting")
    DELETING("deleting"),
    @XmlEnumValue("void")
    VOID("void"),
    @XmlEnumValue("recovering")
    RECOVERING("recovering");
    private final String value;

    TypeCtIntPrlStatus(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TypeCtIntPrlStatus fromValue(String v) {
        for (TypeCtIntPrlStatus c: TypeCtIntPrlStatus.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
