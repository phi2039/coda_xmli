//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.03 at 01:45:22 AM EST 
//


package com.coda.efinance.schemas.common;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeCtWorkflowResponsibilityOperator.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="typeCtWorkflowResponsibilityOperator"&gt;
 *   &lt;restriction base="{http://www.coda.com/efinance/schemas/common}typeBaseEnum"&gt;
 *     &lt;enumeration value="op_eq"/&gt;
 *     &lt;enumeration value="op_ne"/&gt;
 *     &lt;enumeration value="op_lt"/&gt;
 *     &lt;enumeration value="op_gt"/&gt;
 *     &lt;enumeration value="op_lte"/&gt;
 *     &lt;enumeration value="op_gte"/&gt;
 *     &lt;enumeration value="op_like"/&gt;
 *     &lt;enumeration value="op_unlike"/&gt;
 *     &lt;enumeration value="op_range"/&gt;
 *     &lt;enumeration value="op_nrange"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "typeCtWorkflowResponsibilityOperator")
@XmlEnum
public enum TypeCtWorkflowResponsibilityOperator {


    /**
     *  = (equal to) 7 8 9 (In range) 10
     * 
     */
    @XmlEnumValue("op_eq")
    OP_EQ("op_eq"),

    /**
     * <> (not equal to)
     * 
     */
    @XmlEnumValue("op_ne")
    OP_NE("op_ne"),

    /**
     * < (less than)
     * 
     */
    @XmlEnumValue("op_lt")
    OP_LT("op_lt"),

    /**
     * > (greater than)
     * 
     */
    @XmlEnumValue("op_gt")
    OP_GT("op_gt"),

    /**
     * <= (less than or equal to)
     * 
     */
    @XmlEnumValue("op_lte")
    OP_LTE("op_lte"),

    /**
     * >= (greater than or equal to)
     * 
     */
    @XmlEnumValue("op_gte")
    OP_GTE("op_gte"),

    /**
     * LIKE (matches wildcard string)
     * 
     */
    @XmlEnumValue("op_like")
    OP_LIKE("op_like"),

    /**
     * NOTLIKE (does not match wildcard string)
     * 
     */
    @XmlEnumValue("op_unlike")
    OP_UNLIKE("op_unlike"),

    /**
     * RANGE (in the specified range)
     * 
     */
    @XmlEnumValue("op_range")
    OP_RANGE("op_range"),

    /**
     * NRANGE (not in the specified range)
     * 
     */
    @XmlEnumValue("op_nrange")
    OP_NRANGE("op_nrange");
    private final String value;

    TypeCtWorkflowResponsibilityOperator(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TypeCtWorkflowResponsibilityOperator fromValue(String v) {
        for (TypeCtWorkflowResponsibilityOperator c: TypeCtWorkflowResponsibilityOperator.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
