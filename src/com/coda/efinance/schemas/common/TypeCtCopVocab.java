//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.12.03 at 01:45:22 AM EST 
//


package com.coda.efinance.schemas.common;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for typeCtCopVocab.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="typeCtCopVocab"&gt;
 *   &lt;restriction base="{http://www.coda.com/efinance/schemas/common}typeBaseEnum"&gt;
 *     &lt;enumeration value="cpycmp_elm1"/&gt;
 *     &lt;enumeration value="cpycmp_elm2"/&gt;
 *     &lt;enumeration value="cpycmp_elm3"/&gt;
 *     &lt;enumeration value="cpycmp_elm4"/&gt;
 *     &lt;enumeration value="cpycmp_elm5"/&gt;
 *     &lt;enumeration value="cpycmp_elm6"/&gt;
 *     &lt;enumeration value="cpycmp_elm7"/&gt;
 *     &lt;enumeration value="cpycmp_elm8"/&gt;
 *     &lt;enumeration value="cpycmp_grp1"/&gt;
 *     &lt;enumeration value="cpycmp_grp2"/&gt;
 *     &lt;enumeration value="cpycmp_grp3"/&gt;
 *     &lt;enumeration value="cpycmp_grp4"/&gt;
 *     &lt;enumeration value="cpycmp_grp5"/&gt;
 *     &lt;enumeration value="cpycmp_grp6"/&gt;
 *     &lt;enumeration value="cpycmp_grp7"/&gt;
 *     &lt;enumeration value="cpycmp_grp8"/&gt;
 *     &lt;enumeration value="cpycmp_gpm"/&gt;
 *     &lt;enumeration value="cpycmp_cur"/&gt;
 *     &lt;enumeration value="cpycmp_year"/&gt;
 *     &lt;enumeration value="cpycmp_tax"/&gt;
 *     &lt;enumeration value="cpycmp_bal"/&gt;
 *     &lt;enumeration value="cpycmp_des"/&gt;
 *     &lt;enumeration value="cpycmp_doc"/&gt;
 *     &lt;enumeration value="cpycmp_pcm"/&gt;
 *     &lt;enumeration value="cpycmp_bnk"/&gt;
 *     &lt;enumeration value="cpycmp_led"/&gt;
 *     &lt;enumeration value="cpycmp_chn"/&gt;
 *     &lt;enumeration value="cpycmp_cim"/&gt;
 *     &lt;enumeration value="cpycmp_dst"/&gt;
 *     &lt;enumeration value="cpycmp_gsl"/&gt;
 *     &lt;enumeration value="cpycmp_pre"/&gt;
 *     &lt;enumeration value="cpycmp_med"/&gt;
 *     &lt;enumeration value="cpycmp_rec"/&gt;
 *     &lt;enumeration value="cpycmp_rem"/&gt;
 *     &lt;enumeration value="cpycmp_rul"/&gt;
 *     &lt;enumeration value="cpycmp_ten"/&gt;
 *     &lt;enumeration value="cpycmp_arc"/&gt;
 *     &lt;enumeration value="cpycmp_trn"/&gt;
 *     &lt;enumeration value="cpycmp_stm"/&gt;
 *     &lt;enumeration value="cpycmp_ttm"/&gt;
 *     &lt;enumeration value="cpycmp_spm"/&gt;
 *     &lt;enumeration value="cpycmp_brm"/&gt;
 *     &lt;enumeration value="cpycmp_etm"/&gt;
 *     &lt;enumeration value="cpycmp_itm"/&gt;
 *     &lt;enumeration value="cpycmp_mam"/&gt;
 *     &lt;enumeration value="cpycmp_umm"/&gt;
 *     &lt;enumeration value="cpycmp_brp"/&gt;
 *     &lt;enumeration value="cpycmp_efm1"/&gt;
 *     &lt;enumeration value="cpycmp_efm2"/&gt;
 *     &lt;enumeration value="cpycmp_efm3"/&gt;
 *     &lt;enumeration value="cpycmp_efm4"/&gt;
 *     &lt;enumeration value="cpycmp_efm5"/&gt;
 *     &lt;enumeration value="cpycmp_efm6"/&gt;
 *     &lt;enumeration value="cpycmp_efm7"/&gt;
 *     &lt;enumeration value="cpycmp_efm8"/&gt;
 *     &lt;enumeration value="none"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "typeCtCopVocab")
@XmlEnum
public enum TypeCtCopVocab {


    /**
     * Element 1
     * 
     */
    @XmlEnumValue("cpycmp_elm1")
    CPYCMP_ELM_1("cpycmp_elm1"),

    /**
     * Element 2
     * 
     */
    @XmlEnumValue("cpycmp_elm2")
    CPYCMP_ELM_2("cpycmp_elm2"),

    /**
     * Element 3
     * 
     */
    @XmlEnumValue("cpycmp_elm3")
    CPYCMP_ELM_3("cpycmp_elm3"),

    /**
     * Element 4
     * 
     */
    @XmlEnumValue("cpycmp_elm4")
    CPYCMP_ELM_4("cpycmp_elm4"),

    /**
     * Element 5
     * 
     */
    @XmlEnumValue("cpycmp_elm5")
    CPYCMP_ELM_5("cpycmp_elm5"),

    /**
     * Element 6
     * 
     */
    @XmlEnumValue("cpycmp_elm6")
    CPYCMP_ELM_6("cpycmp_elm6"),

    /**
     * Element 7
     * 
     */
    @XmlEnumValue("cpycmp_elm7")
    CPYCMP_ELM_7("cpycmp_elm7"),

    /**
     * Element 8
     * 
     */
    @XmlEnumValue("cpycmp_elm8")
    CPYCMP_ELM_8("cpycmp_elm8"),

    /**
     * Account group 1
     * 
     */
    @XmlEnumValue("cpycmp_grp1")
    CPYCMP_GRP_1("cpycmp_grp1"),

    /**
     * Account group 2
     * 
     */
    @XmlEnumValue("cpycmp_grp2")
    CPYCMP_GRP_2("cpycmp_grp2"),

    /**
     * Account group 3
     * 
     */
    @XmlEnumValue("cpycmp_grp3")
    CPYCMP_GRP_3("cpycmp_grp3"),

    /**
     * Account group 4
     * 
     */
    @XmlEnumValue("cpycmp_grp4")
    CPYCMP_GRP_4("cpycmp_grp4"),

    /**
     * Account group 5
     * 
     */
    @XmlEnumValue("cpycmp_grp5")
    CPYCMP_GRP_5("cpycmp_grp5"),

    /**
     * Account group 6
     * 
     */
    @XmlEnumValue("cpycmp_grp6")
    CPYCMP_GRP_6("cpycmp_grp6"),

    /**
     * Account group 7
     * 
     */
    @XmlEnumValue("cpycmp_grp7")
    CPYCMP_GRP_7("cpycmp_grp7"),

    /**
     * Account group 8
     * 
     */
    @XmlEnumValue("cpycmp_grp8")
    CPYCMP_GRP_8("cpycmp_grp8"),

    /**
     * Group master
     * 
     */
    @XmlEnumValue("cpycmp_gpm")
    CPYCMP_GPM("cpycmp_gpm"),

    /**
     * Currency
     * 
     */
    @XmlEnumValue("cpycmp_cur")
    CPYCMP_CUR("cpycmp_cur"),

    /**
     * Year
     * 
     */
    @XmlEnumValue("cpycmp_year")
    CPYCMP_YEAR("cpycmp_year"),

    /**
     * Tax
     * 
     */
    @XmlEnumValue("cpycmp_tax")
    CPYCMP_TAX("cpycmp_tax"),

    /**
     * Balance
     * 
     */
    @XmlEnumValue("cpycmp_bal")
    CPYCMP_BAL("cpycmp_bal"),

    /**
     * Destination
     * 
     */
    @XmlEnumValue("cpycmp_des")
    CPYCMP_DES("cpycmp_des"),

    /**
     * Document
     * 
     */
    @XmlEnumValue("cpycmp_doc")
    CPYCMP_DOC("cpycmp_doc"),

    /**
     * Pay/Collect master
     * 
     */
    @XmlEnumValue("cpycmp_pcm")
    CPYCMP_PCM("cpycmp_pcm"),

    /**
     * Bank
     * 
     */
    @XmlEnumValue("cpycmp_bnk")
    CPYCMP_BNK("cpycmp_bnk"),

    /**
     * Ledger
     * 
     */
    @XmlEnumValue("cpycmp_led")
    CPYCMP_LED("cpycmp_led"),

    /**
     * Chain master
     * 
     */
    @XmlEnumValue("cpycmp_chn")
    CPYCMP_CHN("cpycmp_chn"),

    /**
     * Interest master
     * 
     */
    @XmlEnumValue("cpycmp_cim")
    CPYCMP_CIM("cpycmp_cim"),

    /**
     * Distribution master
     * 
     */
    @XmlEnumValue("cpycmp_dst")
    CPYCMP_DST("cpycmp_dst"),

    /**
     * Generic selector master
     * 
     */
    @XmlEnumValue("cpycmp_gsl")
    CPYCMP_GSL("cpycmp_gsl"),

    /**
     * Presenter master
     * 
     */
    @XmlEnumValue("cpycmp_pre")
    CPYCMP_PRE("cpycmp_pre"),

    /**
     * Media master
     * 
     */
    @XmlEnumValue("cpycmp_med")
    CPYCMP_MED("cpycmp_med"),

    /**
     * Reconciliation master
     * 
     */
    @XmlEnumValue("cpycmp_rec")
    CPYCMP_REC("cpycmp_rec"),

    /**
     * Reminder letter master
     * 
     */
    @XmlEnumValue("cpycmp_rem")
    CPYCMP_REM("cpycmp_rem"),

    /**
     * Rule master
     * 
     */
    @XmlEnumValue("cpycmp_rul")
    CPYCMP_RUL("cpycmp_rul"),

    /**
     *  1099 master
     * 
     */
    @XmlEnumValue("cpycmp_ten")
    CPYCMP_TEN("cpycmp_ten"),

    /**
     * Archive
     * 
     */
    @XmlEnumValue("cpycmp_arc")
    CPYCMP_ARC("cpycmp_arc"),

    /**
     * Transaction type master
     * 
     */
    @XmlEnumValue("cpycmp_trn")
    CPYCMP_TRN("cpycmp_trn"),

    /**
     * Statement master
     * 
     */
    @XmlEnumValue("cpycmp_stm")
    CPYCMP_STM("cpycmp_stm"),

    /**
     * Transaction type master
     * 
     */
    @XmlEnumValue("cpycmp_ttm")
    CPYCMP_TTM("cpycmp_ttm"),

    /**
     * Statement processing master
     * 
     */
    @XmlEnumValue("cpycmp_spm")
    CPYCMP_SPM("cpycmp_spm"),

    /**
     * Browse report master
     * 
     */
    @XmlEnumValue("cpycmp_brm")
    CPYCMP_BRM("cpycmp_brm"),

    /**
     * Element template master
     * 
     */
    @XmlEnumValue("cpycmp_etm")
    CPYCMP_ETM("cpycmp_etm"),

    /**
     * Item master
     * 
     */
    @XmlEnumValue("cpycmp_itm")
    CPYCMP_ITM("cpycmp_itm"),

    /**
     * Matching master
     * 
     */
    @XmlEnumValue("cpycmp_mam")
    CPYCMP_MAM("cpycmp_mam"),

    /**
     * Undo matching master
     * 
     */
    @XmlEnumValue("cpycmp_umm")
    CPYCMP_UMM("cpycmp_umm"),

    /**
     * Browse report master
     * 
     */
    @XmlEnumValue("cpycmp_brp")
    CPYCMP_BRP("cpycmp_brp"),

    /**
     * Element filter level 1
     * 
     */
    @XmlEnumValue("cpycmp_efm1")
    CPYCMP_EFM_1("cpycmp_efm1"),

    /**
     * Element filter level 2
     * 
     */
    @XmlEnumValue("cpycmp_efm2")
    CPYCMP_EFM_2("cpycmp_efm2"),

    /**
     * Element filter level 3
     * 
     */
    @XmlEnumValue("cpycmp_efm3")
    CPYCMP_EFM_3("cpycmp_efm3"),

    /**
     * Element filter level 4
     * 
     */
    @XmlEnumValue("cpycmp_efm4")
    CPYCMP_EFM_4("cpycmp_efm4"),

    /**
     * Element filter level 5
     * 
     */
    @XmlEnumValue("cpycmp_efm5")
    CPYCMP_EFM_5("cpycmp_efm5"),

    /**
     * Element filter level 6
     * 
     */
    @XmlEnumValue("cpycmp_efm6")
    CPYCMP_EFM_6("cpycmp_efm6"),

    /**
     * Element filter level 7
     * 
     */
    @XmlEnumValue("cpycmp_efm7")
    CPYCMP_EFM_7("cpycmp_efm7"),

    /**
     * Element filter level 8
     * 
     */
    @XmlEnumValue("cpycmp_efm8")
    CPYCMP_EFM_8("cpycmp_efm8"),

    /**
     * None
     * 
     */
    @XmlEnumValue("none")
    NONE("none");
    private final String value;

    TypeCtCopVocab(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static TypeCtCopVocab fromValue(String v) {
        for (TypeCtCopVocab c: TypeCtCopVocab.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
