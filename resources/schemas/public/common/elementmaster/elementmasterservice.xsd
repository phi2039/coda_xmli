<?xml version="1.0" encoding="UTF-8"?>

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:elm="http://www.coda.com/efinance/schemas/elementmaster" xmlns:com="http://www.coda.com/efinance/schemas/common" targetNamespace="http://www.coda.com/efinance/schemas/elementmaster" elementFormDefault="qualified" version="11.3">

  <xsd:import namespace="http://www.coda.com/efinance/schemas/common" schemaLocation="http://cda-dev.aws3.liiaws.net/xmli-schemas/public/common/common/types.xsd"/>
  <xsd:import namespace="http://www.coda.com/efinance/schemas/common" schemaLocation="http://cda-dev.aws3.liiaws.net/xmli-schemas/public/common/common/service.xsd"/>
  <xsd:include schemaLocation="http://cda-dev.aws3.liiaws.net/xmli-schemas/public/common/elementmaster/elementmaster.xsd"/>

  <xsd:complexType name="ListRequest">
    <xsd:complexContent>
      <xsd:extension base="com:Request">
        <xsd:sequence>
          <xsd:element name="Filter" type="elm:elmReqFullKeys">
            <xsd:annotation>
              <xsd:documentation>A filter that selects the elements to be listed.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="ListRequestVerb">
    <xsd:annotation>
      <xsd:documentation>Retrieves extended key information for the specified element masters from the database.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="com:RequestVerb">
        <xsd:sequence>
          <xsd:element name="Request" type="elm:ListRequest" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="ListResponse">
    <xsd:complexContent>
      <xsd:extension base="com:Response">
        <xsd:sequence>
          <xsd:element name="Filter" type="elm:elmReqFullKeys">
            <xsd:annotation>
              <xsd:documentation>The filter that was used to select the element masters to be listed.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Keys" type="elm:elmKeyData" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Contains extended key information for the listed element masters.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="ListResponseVerb">
    <xsd:annotation>
      <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="com:ResponseVerb">
        <xsd:sequence>
          <xsd:element name="Response" type="elm:ListResponse" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="AddRequest">
    <xsd:complexContent>
      <xsd:extension base="com:Request">
        <xsd:sequence>
          <xsd:element name="Element" type="elm:Element">
            <xsd:annotation>
              <xsd:documentation>Contains the information for the element master you want to create.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="AddRequestVerb">
    <xsd:annotation>
      <xsd:documentation>Creates new element masters in the database using the element information you provide.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="com:MultiCompanyRequestVerb">
        <xsd:sequence>
          <xsd:element name="Request" type="elm:AddRequest" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="templatecmpcode" type="com:typeGeneralCode" use="optional">
          <xsd:annotation>
            <xsd:documentation>The code for the company in which the selected template exists.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="templatecode" type="com:typeGeneralCode" use="optional">
          <xsd:annotation>
            <xsd:documentation>The code for the template on which the current element master is being based.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="inhibitinitialisationfromtemplate" type="xsd:boolean" use="optional">
          <xsd:annotation>
            <xsd:documentation>If specified, prevents initialisation from the template.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="autogeneratefromtemplate" type="xsd:boolean" use="optional">
          <xsd:annotation>
            <xsd:documentation>If specified, element codes are set to be automatically generated.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="AddResponse">
    <xsd:complexContent>
      <xsd:extension base="com:MultiCompanyResponse">
        <xsd:sequence>
          <xsd:element name="CmpCode" type="com:typeGeneralCode">
            <xsd:annotation>
              <xsd:documentation>The code for the company in which you attempted to create the element master.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Level" type="com:typeElmLevel">
            <xsd:annotation>
              <xsd:documentation>The level of the element master that you attempted to create.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Code" type="com:typeElmCode">
            <xsd:annotation>
              <xsd:documentation>The code for the element master that you attempted to create.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="TimeStamp" type="com:typeWord" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The TimeStamp value for this element master in the database.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="TaxesTimeStamp" type="com:typeWord" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The TimeStamp value for this element master in the oas_elmtaxes table.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="AutoGenerateRetry" type="xsd:boolean" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>If specified, the initial attempt to generate a code failed.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="AutoGeneratedCode" type="com:typeElmCode" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>An automatically generated element code.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="AddResponseVerb">
    <xsd:annotation>
      <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="com:ResponseVerb">
        <xsd:sequence>
          <xsd:element name="Companies" type="com:Companies" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Contains the list of additional companies in which you want to create the masters. This is part of the multi-company functionality for maintaining masters in multiple companies.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Response" type="elm:AddResponse" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="GetRequest">
    <xsd:complexContent>
      <xsd:extension base="com:Request">
        <xsd:sequence>
          <xsd:element name="Key" type="elm:elmFullKey">
            <xsd:annotation>
              <xsd:documentation>Contains the key identifying the element master you want to retrieve from the database.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="UseMnemonic" type="xsd:boolean" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Indicates that the element code specified in the Key for this Request, may (or may not) be a mnemonic.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="IncludeLastTransaction" type="xsd:boolean" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Indicates whether details of the last transaction posted to the specified element(s) are retrieved.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="CheckForPostings" type="xsd:boolean" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>If set, checks for postings to the specified element masters.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="GetRequestVerb">
    <xsd:annotation>
      <xsd:documentation>Retrieves the specified element masters from the database.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="com:RequestVerb">
        <xsd:sequence>
          <xsd:element name="Request" type="elm:GetRequest" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="getretailinfo" type="xsd:boolean" use="optional">
          <xsd:annotation>
            <xsd:documentation>If set, includes Retail information.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="GetResponse">
    <xsd:complexContent>
      <xsd:extension base="com:Response">
        <xsd:sequence>
          <xsd:element name="CmpCode" type="com:typeGeneralCode">
            <xsd:annotation>
              <xsd:documentation>The code for the company from which you attempted to retrieve the specified element master.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Level" type="com:typeElmLevel">
            <xsd:annotation>
              <xsd:documentation>The level of the element master that you attempted to retrieve.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Code" type="com:typeElmCode">
            <xsd:annotation>
              <xsd:documentation>The code for the element master that you attempted to retrieve.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Element" type="elm:Element" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Contains the element master you have retrieved from the database.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="GetResponseVerb">
    <xsd:annotation>
      <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="com:ResponseVerb">
        <xsd:sequence>
          <xsd:element name="Response" type="elm:GetResponse" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="getretailinfo" type="xsd:boolean" use="optional">
          <xsd:annotation>
            <xsd:documentation>If set, Retail information has been included.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="DeleteRequest">
    <xsd:complexContent>
      <xsd:extension base="com:Request">
        <xsd:sequence>
          <xsd:element name="Key" type="elm:elmFullKey">
            <xsd:annotation>
              <xsd:documentation>Contains the key identifying the element master you want to delete.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="DeleteRequestVerb">
    <xsd:annotation>
      <xsd:documentation>Deletes the specified element masters from the database.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="com:RequestVerb">
        <xsd:sequence>
          <xsd:element name="Request" type="elm:DeleteRequest" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="DeleteResponse">
    <xsd:complexContent>
      <xsd:extension base="com:Response">
        <xsd:sequence>
          <xsd:element name="CmpCode" type="com:typeGeneralCode">
            <xsd:annotation>
              <xsd:documentation>The code for the company in which you attempted to delete the element master.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Level" type="com:typeElmLevel">
            <xsd:annotation>
              <xsd:documentation>The level of the element master that you attempted to delete.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Code" type="com:typeElmCode">
            <xsd:annotation>
              <xsd:documentation>The code for the element master that you attempted to delete.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="DeleteResponseVerb">
    <xsd:annotation>
      <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="com:ResponseVerb">
        <xsd:sequence>
          <xsd:element name="Response" type="elm:DeleteResponse" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="FetchRequest">
    <xsd:complexContent>
      <xsd:extension base="com:Request">
        <xsd:sequence>
          <xsd:element name="Key" type="elm:FetchKey">
            <xsd:annotation>
              <xsd:documentation>Contains the key identifying the element information you want to retrieve from the database.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="FetchRequestVerb">
    <xsd:annotation>
      <xsd:documentation>Fetches the specified element information from the database.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="com:RequestVerb">
        <xsd:sequence>
          <xsd:element name="Request" type="elm:FetchRequest" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="getretailinfo" type="xsd:boolean" use="optional">
          <xsd:annotation>
            <xsd:documentation>If set, includes Retail information.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="FetchResponse">
    <xsd:complexContent>
      <xsd:extension base="com:Response">
        <xsd:sequence>
          <xsd:element name="CmpCode" type="com:typeGeneralCode">
            <xsd:annotation>
              <xsd:documentation>The code for the company from which you attempted to fetch element information.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Level" type="com:typeElmLevel">
            <xsd:annotation>
              <xsd:documentation>The level of the element whose information you attempted to fetch.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Code" type="com:typeElmCode">
            <xsd:annotation>
              <xsd:documentation>The code for the element master whose information you attempted to fetch.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Element" type="elm:Element" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Contains the element information fetched from the database.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="FetchResponseVerb">
    <xsd:annotation>
      <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="com:ResponseVerb">
        <xsd:sequence>
          <xsd:element name="Response" type="elm:FetchResponse" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="getretailinfo" type="xsd:boolean" use="optional">
          <xsd:annotation>
            <xsd:documentation>If set, includes Retail information.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="UpdateRequest">
    <xsd:complexContent>
      <xsd:extension base="com:Request">
        <xsd:sequence>
          <xsd:element name="Element" type="elm:Element">
            <xsd:annotation>
              <xsd:documentation>Contains the information for the element master you want to update. All XML elements in the element master and all lists must be specified.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="UpdateRequestVerb">
    <xsd:annotation>
      <xsd:documentation>Updates element masters in the database using the element information you provide.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="com:MultiCompanyRequestVerb">
        <xsd:sequence>
          <xsd:element name="Request" type="elm:UpdateRequest" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="candeleteretailinfo" type="xsd:boolean" use="optional">
          <xsd:annotation>
            <xsd:documentation>If set, Retail information can be deleted.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="UpdateResponse">
    <xsd:complexContent>
      <xsd:extension base="com:MultiCompanyResponse">
        <xsd:sequence>
          <xsd:element name="CmpCode" type="com:typeGeneralCode">
            <xsd:annotation>
              <xsd:documentation>The code for the company in which you attempted to update the element master.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Level" type="com:typeElmLevel">
            <xsd:annotation>
              <xsd:documentation>The level of the element master that you attempted to update.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Code" type="com:typeElmCode">
            <xsd:annotation>
              <xsd:documentation>The code for the element master that you attempted to update.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="TimeStamp" type="com:typeWord" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The TimeStamp value for this element master in the database.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="TaxesTimeStamp" type="com:typeWord" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The TimeStamp value for this element master in the oas_elmtaxes table.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="UpdateResponseVerb">
    <xsd:annotation>
      <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="com:ResponseVerb">
        <xsd:sequence>
          <xsd:element name="Companies" type="com:Companies" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Contains the list of additional companies in which you want to update the masters. This is part of the multi-company functionality for maintaining masters in multiple companies.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Response" type="elm:UpdateResponse" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="candeleteretailinfo" type="xsd:boolean" use="optional">
          <xsd:annotation>
            <xsd:documentation>If set, Retail information was allowed to be deleted.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="SetRequest">
    <xsd:complexContent>
      <xsd:extension base="com:Request">
        <xsd:sequence>
          <xsd:element name="Element" type="elm:Element">
            <xsd:annotation>
              <xsd:documentation>Identifies the element master you want to update and the new values for the fields you want to set. Include optional elements only for those fields you want to set. Lists, if specified, are replaced in their entirety.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="SetRequestVerb">
    <xsd:annotation>
      <xsd:documentation>Sets values for specified fields in specified element masters.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="com:MultiCompanyRequestVerb">
        <xsd:sequence>
          <xsd:element name="Request" type="elm:SetRequest" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="candeleteretailinfo" type="xsd:boolean" use="optional">
          <xsd:annotation>
            <xsd:documentation>If set, Retail information can be deleted.</xsd:documentation>
          </xsd:annotation>
        </xsd:attribute>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="SetResponse">
    <xsd:complexContent>
      <xsd:extension base="com:MultiCompanyResponse">
        <xsd:sequence>
          <xsd:element name="CmpCode" type="com:typeGeneralCode">
            <xsd:annotation>
              <xsd:documentation>The code for the company in which you attempted to set some of the element master's values.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Level" type="com:typeElmLevel">
            <xsd:annotation>
              <xsd:documentation>The level of the element master whose values you attempted to set.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Code" type="com:typeElmCode">
            <xsd:annotation>
              <xsd:documentation>The code for the element master whose values you attempted to set.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="TimeStamp" type="com:typeWord" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The TimeStamp value for this element master in the database.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="TaxesTimeStamp" type="com:typeWord" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>The TimeStamp value for this element master in the oas_elmtaxes table.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="SetResponseVerb">
    <xsd:annotation>
      <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="com:ResponseVerb">
        <xsd:sequence>
          <xsd:element name="Companies" type="com:Companies" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Contains the list of additional companies in which you want to set values for the selective fields. This is part of the multi-company functionality for maintaining masters in multiple companies.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Response" type="elm:SetResponse" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="GetBanksRequest">
    <xsd:complexContent>
      <xsd:extension base="com:Request">
        <xsd:sequence>
          <xsd:element name="Key" type="elm:elmFullKeyWithTemporaryElmFilter">
            <xsd:annotation>
              <xsd:documentation>Contains the key identifying the element bank you want to retrieve from the database.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="GetBanksRequestVerb">
    <xsd:annotation>
      <xsd:documentation>Retrieves the specified element's bank information from the database.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="com:RequestVerb">
        <xsd:sequence>
          <xsd:element name="Request" type="elm:GetBanksRequest" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="GetBanksResponse">
    <xsd:complexContent>
      <xsd:extension base="com:Response">
        <xsd:sequence>
          <xsd:element name="Key" type="elm:elmFullKeyWithTemporaryElmFilter">
            <xsd:annotation>
              <xsd:documentation>Contains the key identifying the element bank you attempted to retrieve from the database.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Banks" type="elm:BankData" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Contains the element bank information you have retrieved from the database.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="GetBanksResponseVerb">
    <xsd:annotation>
      <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="com:ResponseVerb">
        <xsd:sequence>
          <xsd:element name="Response" type="elm:GetBanksResponse" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="GetAddressesRequest">
    <xsd:complexContent>
      <xsd:extension base="com:Request">
        <xsd:sequence>
          <xsd:element name="Key" type="elm:elmFullKeyWithTemporaryElmFilter">
            <xsd:annotation>
              <xsd:documentation>Contains the key identifying the element address you want to retrieve from the database.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="GetAddressesRequestVerb">
    <xsd:annotation>
      <xsd:documentation>Retrieves the specified element's address information from the database.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="com:RequestVerb">
        <xsd:sequence>
          <xsd:element name="Request" type="elm:GetAddressesRequest" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="GetAddressesResponse">
    <xsd:complexContent>
      <xsd:extension base="com:Response">
        <xsd:sequence>
          <xsd:element name="Key" type="elm:elmFullKeyWithTemporaryElmFilter">
            <xsd:annotation>
              <xsd:documentation>Contains the key identifying the element address you attempted to retrieve from the database.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Addresses" type="elm:AddressData" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Contains the element address information you have retrieved from the database.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="GetAddressesResponseVerb">
    <xsd:annotation>
      <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="com:ResponseVerb">
        <xsd:sequence>
          <xsd:element name="Response" type="elm:GetAddressesResponse" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="ListPunchoutItemCodesRequest">
    <xsd:complexContent>
      <xsd:extension base="com:Request">
        <xsd:sequence>
          <xsd:element name="Filter" type="com:ReqKeys">
            <xsd:annotation>
              <xsd:documentation>A filter that selects the punchout item codes to be listed.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="ListPunchoutItemCodesRequestVerb">
    <xsd:annotation>
      <xsd:documentation>Produces a list of punchout product item codes associated with the specified element masters. The punchout item is used as a template for items created by punchout.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="com:RequestVerb">
        <xsd:sequence>
          <xsd:element name="Request" type="elm:ListPunchoutItemCodesRequest" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="ListPunchoutItemCodesResponse">
    <xsd:complexContent>
      <xsd:extension base="com:Response">
        <xsd:sequence>
          <xsd:element name="Filter" type="com:ReqKeys">
            <xsd:annotation>
              <xsd:documentation>A filter that selects the punchout item codes to be listed.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="FoundDb" type="xsd:boolean">
            <xsd:annotation>
              <xsd:documentation>If set to FALSE, it indicates that the Procurement database, in which the punchout items are held, cannot be accessed. If set to TRUE, the Procurement database has been accessed; this means that if nothing is returned, the element does not contain a list of punchout items.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Keys" type="com:KeyData" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Contains the keys for the punchout item codes listed.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="ListPunchoutItemCodesResponseVerb">
    <xsd:annotation>
      <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="com:ResponseVerb">
        <xsd:sequence>
          <xsd:element name="Response" type="elm:ListPunchoutItemCodesResponse" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="ElementMasterRequest">
    <xsd:annotation>
      <xsd:documentation>This service allows you to maintain element masters.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="com:ServiceRequest">
        <xsd:all>
          <xsd:element name="List" type="elm:ListRequestVerb" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Retrieves extended key information for the specified element masters from the database.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Add" type="elm:AddRequestVerb" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Creates new element masters in the database using the element information you provide.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Get" type="elm:GetRequestVerb" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Retrieves the specified element masters from the database.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Update" type="elm:UpdateRequestVerb" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Updates element masters in the database using the element information you provide.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Set" type="elm:SetRequestVerb" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Sets values for specified fields in specified element masters.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Delete" type="elm:DeleteRequestVerb" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Deletes the specified element masters from the database.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="GetBanks" type="elm:GetBanksRequestVerb" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Retrieves the specified element's bank information from the database.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="GetAddresses" type="elm:GetAddressesRequestVerb" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Retrieves the specified element's address information from the database.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Fetch" type="elm:FetchRequestVerb" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Fetches the specified element information from the database.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ListPunchoutItemCodes" type="elm:ListPunchoutItemCodesRequestVerb" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Produces a list of punchout product item codes associated with the specified element masters. The punchout item is used as a template for items created by punchout.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:all>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="ElementMasterResponse">
    <xsd:annotation>
      <xsd:documentation>This is the response that is returned when you maintain element masters.</xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="com:ServiceResponse">
        <xsd:all>
          <xsd:element name="List" type="elm:ListResponseVerb" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Add" type="elm:AddResponseVerb" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Get" type="elm:GetResponseVerb" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Update" type="elm:UpdateResponseVerb" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Set" type="elm:SetResponseVerb" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Delete" type="elm:DeleteResponseVerb" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="GetBanks" type="elm:GetBanksResponseVerb" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="GetAddresses" type="elm:GetAddressesResponseVerb" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="Fetch" type="elm:FetchResponseVerb" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
          <xsd:element name="ListPunchoutItemCodes" type="elm:ListPunchoutItemCodesResponseVerb" minOccurs="0">
            <xsd:annotation>
              <xsd:documentation>Contains the responses to your requests with this verb.</xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:all>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:element name="ElementMasterRequest" type="elm:ElementMasterRequest">
    <xsd:annotation>
      <xsd:documentation>This service allows you to maintain element masters.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="ElementMasterResponse" type="elm:ElementMasterResponse">
    <xsd:annotation>
      <xsd:documentation>This is the response that is returned when you maintain element masters.</xsd:documentation>
    </xsd:annotation>
  </xsd:element>

</xsd:schema>
